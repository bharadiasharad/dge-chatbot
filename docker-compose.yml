services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT:-8000}:8000"
    environment:
      # Application Configuration
      - NODE_ENV=${NODE_ENV:-development}
      - APP_PORT=${APP_PORT:-8000}
      - APP_NAME=${APP_NAME:-"RAG Chat Storage Microservice"}
      - APP_VERSION=${APP_VERSION:-1.0.0}
      - APP_HOST=${APP_HOST:-0.0.0.0}
      
      # Database Configuration
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=${DATABASE_USERNAME:-postgres}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-postgres}
      - DATABASE_NAME=${DATABASE_NAME:-rag_chat_storage}
      - DATABASE_SSL=${DATABASE_SSL:-false}
      - DATABASE_SYNCHRONIZE=${DATABASE_SYNCHRONIZE:-true}
      - DATABASE_LOGGING=${DATABASE_LOGGING:-false}
      - DATABASE_MAX_CONNECTIONS=${DATABASE_MAX_CONNECTIONS:-20}
      - DATABASE_CONNECTION_TIMEOUT=${DATABASE_CONNECTION_TIMEOUT:-5000}
      - DATABASE_IDLE_TIMEOUT=${DATABASE_IDLE_TIMEOUT:-30000}
      
      # Redis Configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=${REDIS_DB:-0}
      - REDIS_RETRY_DELAY=${REDIS_RETRY_DELAY:-100}
      - REDIS_MAX_RETRIES=${REDIS_MAX_RETRIES:-3}
      
      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET:-your-super-secret-refresh-jwt-key}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN:-7d}
      
      # API Key Configuration
      - API_KEY=${API_KEY:-your-super-secret-api-key}
      
      # Ollama Configuration
      - OLLAMA_HOST=ollama
      - OLLAMA_PORT=11434
      - OLLAMA_MODEL=${OLLAMA_MODEL:-phi3:mini}
      - OLLAMA_TIMEOUT=${OLLAMA_TIMEOUT:-300000}
      - OLLAMA_TEMPERATURE=${OLLAMA_TEMPERATURE:-0.7}
      - OLLAMA_TOP_P=${OLLAMA_TOP_P:-0.9}
      - OLLAMA_MAX_TOKENS=${OLLAMA_MAX_TOKENS:-1000}
      
      # Rate Limiting Configuration
      - RATE_LIMIT_TTL=${RATE_LIMIT_TTL:-60}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
      - RATE_LIMIT_MAX_PER_USER=${RATE_LIMIT_MAX_PER_USER:-50}
      - RATE_LIMIT_MAX_PER_API_KEY=${RATE_LIMIT_MAX_PER_API_KEY:-200}
      
      # Pagination Configuration
      - DEFAULT_PAGE_SIZE=${DEFAULT_PAGE_SIZE:-20}
      - MAX_PAGE_SIZE=${MAX_PAGE_SIZE:-100}
      
      # Logging Configuration
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      - LOG_FILE_PATH=${LOG_FILE_PATH:-logs}
      - LOG_MAX_SIZE=${LOG_MAX_SIZE:-10m}
      - LOG_MAX_FILES=${LOG_MAX_FILES:-5}
      
      # CORS Configuration
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:8000,http://localhost:3001,http://localhost:8080,http://localhost:3000}
      - CORS_METHODS=${CORS_METHODS:-GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS}
      - CORS_CREDENTIALS=${CORS_CREDENTIALS:-true}
      - CORS_ALLOWED_HEADERS=${CORS_ALLOWED_HEADERS:-Content-Type,Authorization,X-API-Key}
      
      # Security Configuration
      - HELMET_ENABLED=${HELMET_ENABLED:-true}
      - COMPRESSION_ENABLED=${COMPRESSION_ENABLED:-true}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:-30000}
      - RESPONSE_TIMEOUT=${RESPONSE_TIMEOUT:-30000}
      
      # Health Check Configuration
      - HEALTH_CHECK_INTERVAL=${HEALTH_CHECK_INTERVAL:-30}
      - HEALTH_CHECK_TIMEOUT=${HEALTH_CHECK_TIMEOUT:-3}
      - HEALTH_CHECK_RETRIES=${HEALTH_CHECK_RETRIES:-3}
      
      # File Upload Configuration
      - UPLOAD_MAX_FILE_SIZE=${UPLOAD_MAX_FILE_SIZE:-10485760}
      - UPLOAD_ALLOWED_TYPES=${UPLOAD_ALLOWED_TYPES:-txt,pdf}
      - UPLOAD_DESTINATION=${UPLOAD_DESTINATION:-uploads}
      - UPLOAD_TEMP_DIR=${UPLOAD_TEMP_DIR:-temp}
      
      # Vector Storage Configuration
      - VECTOR_DIMENSION=${VECTOR_DIMENSION:-1536}
      - VECTOR_SIMILARITY_THRESHOLD=${VECTOR_SIMILARITY_THRESHOLD:-0.7}
      - VECTOR_MAX_RESULTS=${VECTOR_MAX_RESULTS:-10}
      
      # RAG Configuration
      - RAG_CHUNK_SIZE=${RAG_CHUNK_SIZE:-1000}
      - RAG_CHUNK_OVERLAP=${RAG_CHUNK_OVERLAP:-200}
      - RAG_MAX_CONTEXT_LENGTH=${RAG_MAX_CONTEXT_LENGTH:-3000}
      - RAG_TEMPERATURE=${RAG_TEMPERATURE:-0.7}
      - RAG_TOP_P=${RAG_TOP_P:-0.9}
      
      # Monitoring Configuration
      - METRICS_ENABLED=${METRICS_ENABLED:-true}
      - METRICS_PORT=${METRICS_PORT:-9090}
      - METRICS_PATH=${METRICS_PATH:-/metrics}
      
      # Development Configuration
      - SWAGGER_ENABLED=${SWAGGER_ENABLED:-true}
      - SWAGGER_TITLE=${SWAGGER_TITLE:-"RAG Chat Storage API"}
      - SWAGGER_DESCRIPTION=${SWAGGER_DESCRIPTION:-"API documentation for RAG Chat Storage Microservice"}
      - SWAGGER_VERSION=${SWAGGER_VERSION:-1.0.0}
      - SWAGGER_CONTACT_NAME=${SWAGGER_CONTACT_NAME:-"Development Team"}
      - SWAGGER_CONTACT_EMAIL=${SWAGGER_CONTACT_EMAIL:-"dev@example.com"}
    depends_on:
      - postgres
      - redis
      - ollama
    volumes:
      - .:/app
      - /app/node_modules
      - document_storage:/app/uploads
    networks:
      - rag-chat-network

  postgres:
    image: pgvector/pgvector:pg15
    container_name: assignment-postgres
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-rag_chat_storage}
      POSTGRES_USER: ${DATABASE_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-postgres}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rag-chat-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - rag-chat-network

  ollama:
    image: ollama/ollama:latest
    restart: always
    ports:
      - "${OLLAMA_PORT:-11434}:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - rag-chat-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - rag-chat-network

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
  ollama_data:
  document_storage:

networks:
  rag-chat-network:
    driver: bridge